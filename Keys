local Keys = Instance.new("ScreenGui")
local A = Instance.new("TextLabel")
local UICorner = Instance.new("UICorner")
local W = Instance.new("TextLabel")
local UICorner_2 = Instance.new("UICorner")
local D = Instance.new("TextLabel")
local UICorner_3 = Instance.new("UICorner")
local S = Instance.new("TextLabel")
local UICorner_4 = Instance.new("UICorner")
local Space = Instance.new("TextLabel")
local UICorner_5 = Instance.new("UICorner")

--Properties:

Keys.Name = "Keys"
Keys.Parent = game.Workspace
Keys.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

A.Name = "A"
A.Parent = Keys
A.BackgroundColor3 = Color3.fromRGB(34, 255, 0)
A.Position = UDim2.new(0.0402750522, 0, 0.192532092, 0)
A.Size = UDim2.new(0, 54, 0, 47)
A.Font = Enum.Font.Unknown
A.Text = "A"
A.TextColor3 = Color3.fromRGB(255, 255, 255)
A.TextSize = 35.000

UICorner.Parent = A

W.Name = "W"
W.Parent = Keys
W.BackgroundColor3 = Color3.fromRGB(34, 255, 0)
W.Position = UDim2.new(0.10117878, 0, 0.0945157558, 0)
W.Size = UDim2.new(0, 54, 0, 47)
W.Font = Enum.Font.Unknown
W.Text = "W"
W.TextColor3 = Color3.fromRGB(255, 255, 255)
W.TextSize = 35.000

UICorner_2.Parent = W

D.Name = "D"
D.Parent = Keys
D.BackgroundColor3 = Color3.fromRGB(34, 255, 0)
D.Position = UDim2.new(0.164047152, 0, 0.192532092, 0)
D.Size = UDim2.new(0, 54, 0, 47)
D.Font = Enum.Font.Unknown
D.Text = "D"
D.TextColor3 = Color3.fromRGB(255, 255, 255)
D.TextSize = 35.000

UICorner_3.Parent = D

S.Name = "S"
S.Parent = Keys
S.BackgroundColor3 = Color3.fromRGB(34, 255, 0)
S.Position = UDim2.new(0.101178788, 0, 0.192532092, 0)
S.Size = UDim2.new(0, 54, 0, 47)
S.Font = Enum.Font.Unknown
S.Text = "S"
S.TextColor3 = Color3.fromRGB(255, 255, 255)
S.TextSize = 35.000

UICorner_4.Parent = S

Space.Name = "Space"
Space.Parent = Keys
Space.BackgroundColor3 = Color3.fromRGB(34, 255, 0)
Space.Position = UDim2.new(0.017681729, 0, 0.288798153, 0)
Space.Size = UDim2.new(0, 224, 0, 47)
Space.Font = Enum.Font.Unknown
Space.Text = "Space"
Space.TextColor3 = Color3.fromRGB(255, 255, 255)
Space.TextSize = 35.000

UICorner_5.Parent = Space

-- Scripts:

local function NWQEYNF_fake_script() -- A.LocalScript 
	local script = Instance.new('LocalScript', A)

	local textLabel = script.Parent -- Get the TextLabel object
	
	-- Define a function to handle the keyboard events
	local function handleKeyEvent(input, isKeyDown)
		if input.KeyCode == Enum.KeyCode.A then -- Only change the background color if the "W" key is pressed
			if isKeyDown then
				textLabel.BackgroundColor3 = Color3.fromRGB(50, 50, 50) -- Change the background color to dark gray when the "W" key is pressed
			else
				textLabel.BackgroundColor3 = Color3.fromRGB(34, 255, 0) -- Change the background color back to light gray when the "W" key is released
			end
		end
	end
	
	-- Connect the handleKeyEvent function to the UserInputService's InputBegan and InputEnded events
	game:GetService("UserInputService").InputBegan:Connect(function(input, processed)
		if not processed then
			handleKeyEvent(input, true)
		end
	end)
	
	game:GetService("UserInputService").InputEnded:Connect(function(input, processed)
		if not processed then
			handleKeyEvent(input, false)
		end
	end)
	
end
coroutine.wrap(NWQEYNF_fake_script)()
local function JNPS_fake_script() -- W.LocalScript 
	local script = Instance.new('LocalScript', W)

	local textLabel = script.Parent -- Get the TextLabel object
	
	-- Define a function to handle the keyboard events
	local function handleKeyEvent(input, isKeyDown)
		if input.KeyCode == Enum.KeyCode.W then -- Only change the background color if the "W" key is pressed
			if isKeyDown then
				textLabel.BackgroundColor3 = Color3.fromRGB(50, 50, 50) -- Change the background color to dark gray when the "W" key is pressed
			else
				textLabel.BackgroundColor3 = Color3.fromRGB(34, 255, 0) -- Change the background color back to light gray when the "W" key is released
			end
		end
	end
	
	-- Connect the handleKeyEvent function to the UserInputService's InputBegan and InputEnded events
	game:GetService("UserInputService").InputBegan:Connect(function(input, processed)
		if not processed then
			handleKeyEvent(input, true)
		end
	end)
	
	game:GetService("UserInputService").InputEnded:Connect(function(input, processed)
		if not processed then
			handleKeyEvent(input, false)
		end
	end)
	
end
coroutine.wrap(JNPS_fake_script)()
local function KXMHKS_fake_script() -- D.LocalScript 
	local script = Instance.new('LocalScript', D)

	local textLabel = script.Parent -- Get the TextLabel object
	
	-- Define a function to handle the keyboard events
	local function handleKeyEvent(input, isKeyDown)
		if input.KeyCode == Enum.KeyCode.D then -- Only change the background color if the "W" key is pressed
			if isKeyDown then
				textLabel.BackgroundColor3 = Color3.fromRGB(50, 50, 50) -- Change the background color to dark gray when the "W" key is pressed
			else
				textLabel.BackgroundColor3 = Color3.fromRGB(34, 255, 0) -- Change the background color back to light gray when the "W" key is released
			end
		end
	end
	
	-- Connect the handleKeyEvent function to the UserInputService's InputBegan and InputEnded events
	game:GetService("UserInputService").InputBegan:Connect(function(input, processed)
		if not processed then
			handleKeyEvent(input, true)
		end
	end)
	
	game:GetService("UserInputService").InputEnded:Connect(function(input, processed)
		if not processed then
			handleKeyEvent(input, false)
		end
	end)
	
end
coroutine.wrap(KXMHKS_fake_script)()
local function FSCVJX_fake_script() -- S.LocalScript 
	local script = Instance.new('LocalScript', S)

	local textLabel = script.Parent -- Get the TextLabel object
	
	-- Define a function to handle the keyboard events
	local function handleKeyEvent(input, isKeyDown)
		if input.KeyCode == Enum.KeyCode.S then -- Only change the background color if the "W" key is pressed
			if isKeyDown then
				textLabel.BackgroundColor3 = Color3.fromRGB(50, 50, 50) -- Change the background color to dark gray when the "W" key is pressed
			else
				textLabel.BackgroundColor3 = Color3.fromRGB(34, 255, 0) -- Change the background color back to light gray when the "W" key is released
			end
		end
	end
	
	-- Connect the handleKeyEvent function to the UserInputService's InputBegan and InputEnded events
	game:GetService("UserInputService").InputBegan:Connect(function(input, processed)
		if not processed then
			handleKeyEvent(input, true)
		end
	end)
	
	game:GetService("UserInputService").InputEnded:Connect(function(input, processed)
		if not processed then
			handleKeyEvent(input, false)
		end
	end)
	
end
coroutine.wrap(FSCVJX_fake_script)()
local function WPUWUD_fake_script() -- Space.LocalScript 
	local script = Instance.new('LocalScript', Space)

	local textLabel = script.Parent -- Get the TextLabel object
	
	-- Define a function to handle the keyboard events
	local function handleKeyEvent(input, isKeyDown)
		if input.KeyCode == Enum.KeyCode.Space then -- Only change the background color if the "W" key is pressed
			if isKeyDown then
				textLabel.BackgroundColor3 = Color3.fromRGB(50, 50, 50) -- Change the background color to dark gray when the "W" key is pressed
			else
				textLabel.BackgroundColor3 = Color3.fromRGB(34, 255, 0) -- Change the background color back to light gray when the "W" key is released
			end
		end
	end
	
	-- Connect the handleKeyEvent function to the UserInputService's InputBegan and InputEnded events
	game:GetService("UserInputService").InputBegan:Connect(function(input, processed)
		if not processed then
			handleKeyEvent(input, true)
		end
	end)
	
	game:GetService("UserInputService").InputEnded:Connect(function(input, processed)
		if not processed then
			handleKeyEvent(input, false)
		end
	end)
	
end
coroutine.wrap(WPUWUD_fake_script)()
